import unittest
from unittest.mock import patch, MagicMock
from script import (
    filter_files_for_date,
    extract_dynamic_keys,
    write_to_delta,
)

class TestDataProcessingFunctions(unittest.TestCase):
    def test_filter_files_for_date(self):
        # Arrange
        mock_files = [
            MagicMock(name='file1', path='some_path/UNS20231019.json'),
            MagicMock(name='file2', path='some_path/UNS20231020.json')
        ]
        target_date = "UNS20231019"
        
        # Act
        filtered_files = filter_files_for_date(mock_files, target_date)
        
        # Assert
        self.assertEqual(filtered_files, ['some_path/UNS20231019.json'])
    
    def test_extract_dynamic_keys(self):
        # Arrange
        df_mock = MagicMock()
        frame_df = [df_mock]
        
        # Act
        result = extract_dynamic_keys(df_mock)
        
        # Assert
        self.assertEqual(result, df_mock)
    
    @patch('script.write_to_delta')
    def test_write_to_delta(self, mock_write):
        # Arrange
        df_mock = MagicMock()
        name = "test_device"
        
        # Act
        write_to_delta(df_mock, name)
        
        # Assert
        mock_write.assert_called_once_with(df_mock, name)

if __name__ == "__main__":
    unittest.main(argv=[''], exit=False)
